on: [push]
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL: kapasrijkubacr.azurecr.io
      SERVICE_NAME: kpjavakubernetes  
      NAMESPACE: kpjavakubernetes  
      IMAGE_NAME: kpjavakubernetes
      APP_NAME: kpjavakubernetes_
      SECRET_NAME: kpjavakubernetesdockerauth

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: kapasrijkubacr.azurecr.io
        username: 'kapasrijkubacr'
        password: 's+Hpaz1jpJFcwmq647n+IpLepCicg4G3'
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/node/plain/container/Application" -f  "node/plain/container/Application/Dockerfile" -t  $REGISTRY_URL/$IMAGE_NAME:mnb
        docker push $REGISTRY_URL/$IMAGE_NAME:mnb
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.kpjavakubernetes_99ed4 }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: kpjavakubernetes
        container-registry-url: kapasrijkubacr.azurecr.io
        container-registry-username: 'kapasrijkubacr'
        container-registry-password: 's+Hpaz1jpJFcwmq647n+IpLepCicg4G3'
        secret-name: kpjavakubernetesdockerauth
       
    - name: Generate Kubernetes Manifest file
      id: manifest-creation
      run: |
        echo -e "
apiVersion: apps/v1beta1
kind: Deployment
metadata:
name: "$APP_NAME"
spec:
replicas: 2
template:
  metadata:
    labels:
      app: "$APP_NAME"
containers:
  - name: "$APP_NAME"
    image: "$REGISTRY_URL/$IMAGE_NAME"
    ports:
    - containerPort: 8080" > manifest1_.yml
        echo -e "
apiVersion: v1
kind: Service
metadata:
    name: "$APP_NAME"
    labels:
        app: "$APP_NAME"
spec:
    type: LoadBalancer
    ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    selector:
        app: "$APP_NAME""> manifest2_.yml

    - uses: azure/k8s-deploy@v1
      with:
        namespace: kpjavakubernetes
        manifests: |
          manifest1_.yml
          manifest2_.yml
        images: |
          $REGISTRY_URL/$IMAGE_NAME:mnb
        imagepullsecrets: |
          kpjavakubernetesdockerauth
